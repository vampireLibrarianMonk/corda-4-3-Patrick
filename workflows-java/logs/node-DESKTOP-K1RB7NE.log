[INFO ] 2020-01-13T22:19:27,063Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/generated-custom-cordapps/20200113-221926.103/custom-cordapp_1_5_690e2577-6610-4dcf-a217-900fae13d8bd.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/generated-custom-cordapps/20200113-221926.103/custom-cordapp_1_5_42de9130-ffff-4851-aac6-272836cc7c53.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:19:27,195Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/generated-custom-cordapps/20200113-221926.103/custom-cordapp_1_5_690e2577-6610-4dcf-a217-900fae13d8bd.jar {}
[INFO ] 2020-01-13T22:19:27,332Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/generated-custom-cordapps/20200113-221926.103/custom-cordapp_1_5_42de9130-ffff-4851-aac6-272836cc7c53.jar {}
[ERROR] 2020-01-13T22:19:32,133Z [main] internal.Verifier. - Error validating transaction D30E4F2BBDA01AF20B1609B9B382BE14CA67D701BAA3ACD426B8D506DCB51B94. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:96) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:32,142Z [main] internal.Verifier. - Error validating transaction D30E4F2BBDA01AF20B1609B9B382BE14CA67D701BAA3ACD426B8D506DCB51B94. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$10(IOUContractTests.java:96) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:32,158Z [main] internal.Verifier. - Error validating transaction D30E4F2BBDA01AF20B1609B9B382BE14CA67D701BAA3ACD426B8D506DCB51B94. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The lender and the borrower cannot be the same entity.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:44) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderIsNotBorrower$11(IOUContractTests.java:93) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderIsNotBorrower(IOUContractTests.java:92) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:33,560Z [main] internal.Verifier. - Error validating transaction EF24A1A7D8B3C1E0A418CCCB223AAA5FC4A1CF203AF7CC0ED7EA505D2CBF227C. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:57) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:33,567Z [main] internal.Verifier. - Error validating transaction EF24A1A7D8B3C1E0A418CCCB223AAA5FC4A1CF203AF7CC0ED7EA505D2CBF227C. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$4(IOUContractTests.java:57) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:33,580Z [main] internal.Verifier. - Error validating transaction EF24A1A7D8B3C1E0A418CCCB223AAA5FC4A1CF203AF7CC0ED7EA505D2CBF227C. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: Only one output state should be created.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:41) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveOneOutput$5(IOUContractTests.java:53) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveOneOutput(IOUContractTests.java:52) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:34,649Z [main] internal.Verifier. - Error validating transaction 6A9ED345216D66E3CCB5C602F36ECFA3780EF0E564F48CAB1B631DFAB91B017D. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:83) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:34,653Z [main] internal.Verifier. - Error validating transaction 6A9ED345216D66E3CCB5C602F36ECFA3780EF0E564F48CAB1B631DFAB91B017D. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$8(IOUContractTests.java:83) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:34,662Z [main] internal.Verifier. - Error validating transaction 6A9ED345216D66E3CCB5C602F36ECFA3780EF0E564F48CAB1B631DFAB91B017D. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$borrowerMustSignTransaction$9(IOUContractTests.java:80) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.borrowerMustSignTransaction(IOUContractTests.java:79) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[WARN ] 2020-01-13T22:19:34,743Z [main] contracts.AttachmentConstraint. - Found state com.example.contract.IOUContract that is constrained by the insecure: AlwaysAcceptAttachmentConstraint. {}
[ERROR] 2020-01-13T22:19:35,989Z [main] internal.Verifier. - Error validating transaction E25F8F4674618845F25A936A64F6781BB01AFDDE96F92837D572000BD6ABD11D. [errorCode=1o34444, moreInformationAt=https://errors.corda.net/OS/4.3/1o34444] {}
java.lang.IllegalStateException: Required com.example.contract.IOUContract.Commands.Create command
	at net.corda.core.contracts.ContractsDSL.requireSingleCommand(ContractsDSL.kt:81) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:36) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._unverifiedTransaction(TestDSL.kt:336) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.input(TransactionDSLInterpreter.kt:150) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:40) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:36,113Z [main] internal.Verifier. - Error validating transaction 99595130396912763A4C332E618895793A89EE14876EE9F1948A8D01DD6E3BE7. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:43) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:36,123Z [main] internal.Verifier. - Error validating transaction 99595130396912763A4C332E618895793A89EE14876EE9F1948A8D01DD6E3BE7. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$2(IOUContractTests.java:43) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:36,138Z [main] internal.Verifier. - Error validating transaction 99595130396912763A4C332E618895793A89EE14876EE9F1948A8D01DD6E3BE7. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: No inputs should be consumed when issuing an IOU.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:39) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$transactionMustHaveNoInputs$3(IOUContractTests.java:39) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.transactionMustHaveNoInputs(IOUContractTests.java:38) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:37,300Z [main] internal.Verifier. - Error validating transaction 7CFF597DA938DAEB5236A1D30371F45BB8D09C53003D6C49D7A9725B75FD1040. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$12(IOUContractTests.java:109) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:37,304Z [main] internal.Verifier. - Error validating transaction 7CFF597DA938DAEB5236A1D30371F45BB8D09C53003D6C49D7A9725B75FD1040. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$12(IOUContractTests.java:109) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:37,313Z [main] internal.Verifier. - Error validating transaction 7CFF597DA938DAEB5236A1D30371F45BB8D09C53003D6C49D7A9725B75FD1040. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$cannotCreateNegativeValueIOUs$13(IOUContractTests.java:106) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.cannotCreateNegativeValueIOUs(IOUContractTests.java:105) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:38,216Z [main] internal.Verifier. - Error validating transaction 36149AAE01D480388CC65761E97FBB786951AFDC9D05BB8904702C7962C2D3B4. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:70) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:38,219Z [main] internal.Verifier. - Error validating transaction 36149AAE01D480388CC65761E97FBB786951AFDC9D05BB8904702C7962C2D3B4. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.verifies(TestDSL.kt:175) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.Verifies$DefaultImpls.failsWith(LedgerDSLInterpreter.kt:45) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSLInterpreter$DefaultImpls.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.failsWith(TestDSL.kt:74) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TransactionDSL.failsWith(TransactionDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$null$6(IOUContractTests.java:70) ~[classes/:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL$transaction$1.invoke(LedgerDSLInterpreter.kt:132) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.interpretTransactionDsl(TestDSL.kt:270) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:294) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[ERROR] 2020-01-13T22:19:38,228Z [main] internal.Verifier. - Error validating transaction 36149AAE01D480388CC65761E97FBB786951AFDC9D05BB8904702C7962C2D3B4. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {}
java.lang.IllegalArgumentException: Failed requirement: All of the participants must be signers.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:46) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.testing.dsl.TestTransactionDSLInterpreter.toWireTransaction$test_utils(TestDSL.kt:131) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter.recordTransactionWithTransactionMap(TestDSL.kt:298) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.TestLedgerDSLInterpreter._transaction(TestDSL.kt:330) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL._transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt:141) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction$default(LedgerDSLInterpreter.kt:139) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.dsl.LedgerDSL.transaction(LedgerDSLInterpreter.kt) ~[corda-test-utils-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lambda$lenderMustSignTransaction$7(IOUContractTests.java:67) ~[classes/:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt:39) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils$ledger$2.invoke(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt$withTestSerializationEnvIfNotSet$1.invoke(InternalTestUtils.kt) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.common.internal.CommonSerializationTestHelpersKt.asContextEnv(CommonSerializationTestHelpers.kt:11) ~[corda-test-common-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv(InternalSerializationTestHelpers.kt:33) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalSerializationTestHelpersKt.asTestContextEnv$default(InternalSerializationTestHelpers.kt:31) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.internal.InternalTestUtilsKt.withTestSerializationEnvIfNotSet(InternalTestUtils.kt:231) ~[corda-test-utils-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt:36) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger$default(NodeTestUtils.kt:23) ~[corda-node-driver-4.3.jar:?]
	at net.corda.testing.node.NodeTestUtils.ledger(NodeTestUtils.kt) ~[corda-node-driver-4.3.jar:?]
	at com.example.test.contract.IOUContractTests.lenderMustSignTransaction(IOUContractTests.java:66) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_231]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_231]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_231]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_231]
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12) ~[junit-4.12.jar:4.12]
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47) ~[junit-4.12.jar:4.12]
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78) ~[junit-4.12.jar:4.12]
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268) ~[junit-4.12.jar:4.12]
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363) ~[junit-4.12.jar:4.12]
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137) ~[junit-4.12.jar:4.12]
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) ~[junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) ~[junit-rt.jar:?]
[INFO ] 2020-01-13T22:21:52,828Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in C:\Users\Mr. Simple\samples\cordapp-example\contracts-java ... {}
[INFO ] 2020-01-13T22:21:53,348Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:21:56,538Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-01-13T22:22:00,578Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-01-13T22:22:00,608Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2020-01-13T22:22:00,609Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:22:01,524Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:01,563Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-01-13T22:22:02,325Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:02,340Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:02,340Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-01-13T22:22:02,641Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:02,656Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-13T22:22:03,404Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-01-13T22:22:03,688Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-13T22:22:03,688Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-13T22:22:03,736Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-13T22:22:03,737Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-13T22:22:03,737Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-13T22:22:04,463Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:04,463Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:04,495Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-01-13T22:22:04,495Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:04,526Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-01-13T22:22:04,526Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:04,526Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-01-13T22:22:04,543Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:04,543Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-01-13T22:22:04,543Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:05,129Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:05,129Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-01-13T22:22:05,198Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:05,198Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-01-13T22:22:05,246Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:05,246Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-01-13T22:22:05,440Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:05,440Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-01-13T22:22:05,541Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:05,562Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:05,712Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:05,744Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:05,823Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-01-13T22:22:06,026Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:06,026Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-01-13T22:22:06,042Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:06,074Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-01-13T22:22:06,074Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:06,111Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:06,111Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-01-13T22:22:06,127Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:06,127Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-01-13T22:22:06,127Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:06,128Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:06,128Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-01-13T22:22:06,159Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:06,159Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-01-13T22:22:06,174Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:06,174Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:06,174Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-01-13T22:22:08,920Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:08,920Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:08,920Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':contracts-java' {}
[INFO ] 2020-01-13T22:22:08,920Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:08,936Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:22:08,955Z [Connection worker] internal.TestCordappImpl. - Cleaning VCS Checkout Cache (C:\Users\Mr. Simple\samples\cordapp-example\.gradle\vcs-1) {}
[INFO ] 2020-01-13T22:22:08,955Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:22:08,955Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in C:\Users\Mr. Simple\samples\cordapp-example\.gradle {}
[INFO ] 2020-01-13T22:22:08,982Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:22:09,039Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-01-13T22:22:09,381Z [main] internal.TestCordappImpl. - Generating CorDapp jar from local project in C:\Users\Mr. Simple\samples\cordapp-example\workflows-java ... {}
[INFO ] 2020-01-13T22:22:09,384Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:22:09,399Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2020-01-13T22:22:09,402Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:22:09,443Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:09,443Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2020-01-13T22:22:09,443Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:09,459Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:09,459Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2020-01-13T22:22:09,459Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:09,459Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-13T22:22:09,492Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2020-01-13T22:22:09,528Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-13T22:22:09,528Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-13T22:22:09,543Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-13T22:22:09,543Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2020-01-13T22:22:09,544Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2020-01-13T22:22:09,637Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:09,637Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:09,653Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of detachedConfiguration1 {}
[INFO ] 2020-01-13T22:22:09,653Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:09,684Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :clients:classpath {}
[INFO ] 2020-01-13T22:22:09,684Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:09,684Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-01-13T22:22:09,684Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:09,684Z [Connection worker] internal.TestCordappImpl. - Resolve files of :clients:classpath {}
[INFO ] 2020-01-13T22:22:09,684Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2020-01-13T22:22:09,726Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:09,726Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-java {}
[INFO ] 2020-01-13T22:22:09,733Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:09,733Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts-kotlin {}
[INFO ] 2020-01-13T22:22:09,763Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:09,763Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-java {}
[INFO ] 2020-01-13T22:22:09,793Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:09,793Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows-kotlin {}
[INFO ] 2020-01-13T22:22:09,821Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2020-01-13T22:22:09,823Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:09,864Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:09,876Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:09,877Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-01-13T22:22:09,908Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:compileClasspath {}
[INFO ] 2020-01-13T22:22:09,933Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-01-13T22:22:09,933Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:09,933Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:runtime {}
[INFO ] 2020-01-13T22:22:10,054Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:10,072Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:compileClasspath {}
[INFO ] 2020-01-13T22:22:10,087Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:10,120Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:annotationProcessor {}
[INFO ] 2020-01-13T22:22:10,120Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:10,120Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-01-13T22:22:10,120Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:processResources {}
[INFO ] 2020-01-13T22:22:10,136Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-01-13T22:22:10,136Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:classes {}
[INFO ] 2020-01-13T22:22:10,136Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-01-13T22:22:10,136Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:10,136Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts-java:runtime {}
[INFO ] 2020-01-13T22:22:10,152Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:10,152Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts-java:runtime {}
[INFO ] 2020-01-13T22:22:10,152Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:configureCordappFatJar {}
[INFO ] 2020-01-13T22:22:10,152Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-01-13T22:22:10,168Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:jar {}
[INFO ] 2020-01-13T22:22:10,199Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:processResources {}
[INFO ] 2020-01-13T22:22:10,247Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,247Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-01-13T22:22:10,247Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,248Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-01-13T22:22:10,249Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,249Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-01-13T22:22:10,264Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,264Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:runtime {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Task :contracts-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:10,295Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,341Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:compileClasspath {}
[INFO ] 2020-01-13T22:22:10,376Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,376Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows-java:compileClasspath {}
[INFO ] 2020-01-13T22:22:10,376Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,437Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows-java:annotationProcessor {}
[INFO ] 2020-01-13T22:22:10,437Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:compileJava {}
[INFO ] 2020-01-13T22:22:10,452Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:10,452Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:classes {}
[INFO ] 2020-01-13T22:22:10,452Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:10,452Z [Connection worker] internal.TestCordappImpl. - Task :workflows-java:jar {}
[INFO ] 2020-01-13T22:22:12,598Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2020-01-13T22:22:12,598Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:12,598Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows-java' {}
[INFO ] 2020-01-13T22:22:12,599Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2020-01-13T22:22:12,601Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:22:12,659Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in C:\Users\Mr. Simple\samples\cordapp-example\.gradle {}
[INFO ] 2020-01-13T22:22:12,659Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2020-01-13T22:22:12,690Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2020-01-13T22:22:13,020Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222142.199\nodes\0\cordapps] {}
[INFO ] 2020-01-13T22:22:13,035Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:13,069Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:13,219Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:14,471Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:14,582Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:14,830Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:21:38.219Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:21,406Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:21,410Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222142.199\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:21,410Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:21,441Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:21,567Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:21,574Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:25,894Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:27,134Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:27,139Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:27,144Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:27,144Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:27,241Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:27,301Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:27,324Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:27,324Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:27,680Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:27,696Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:27,696Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954147696) {}
[INFO ] 2020-01-13T22:22:27,702Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:27,968Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954147696) {}
[INFO ] 2020-01-13T22:22:28,062Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:28,095Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954147696) {}
[INFO ] 2020-01-13T22:22:28,139Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:28,182Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:28,189Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-13T22:22:28,195Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-13T22:22:29,149Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954147696) {}
[INFO ] 2020-01-13T22:22:29,233Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954147696) {}
[INFO ] 2020-01-13T22:22:29,235Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:29,235Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954147696) {}
[INFO ] 2020-01-13T22:22:29,235Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:29,282Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222142.199\nodes\1\cordapps] {}
[INFO ] 2020-01-13T22:22:29,284Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:29,284Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:29,300Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[WARN ] 2020-01-13T22:22:29,308Z [main] cordapp.CordappResolver. - The CorDapp (name: CorDapp Example, file: cordapp-example-contracts-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [cordapp-example-contracts-0.1] {}
[WARN ] 2020-01-13T22:22:29,311Z [main] cordapp.CordappResolver. - The CorDapp (name: CorDapp Example, file: cordapp-example-workflows-0.1) is installed multiple times on the node. The following files correspond to the exact same content: [cordapp-example-workflows-0.1] {}
[INFO ] 2020-01-13T22:22:29,342Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:29,390Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:29,394Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:21:38.219Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:30,062Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,062Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222142.199\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,062Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,087Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,090Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,090Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,281Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,294Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,297Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,302Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,302Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,402Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:30,408Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:30,413Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:30,413Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:30,587Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:30,590Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:30,619Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:30,620Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954150619) {}
[INFO ] 2020-01-13T22:22:30,622Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:30,629Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954150619) {}
[INFO ] 2020-01-13T22:22:30,640Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:30,645Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954150619) {}
[INFO ] 2020-01-13T22:22:30,652Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:30,683Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:30,703Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954150619) {}
[INFO ] 2020-01-13T22:22:30,708Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954147696) {}
[INFO ] 2020-01-13T22:22:30,710Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:30,724Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954150619) {}
[INFO ] 2020-01-13T22:22:30,726Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:30,737Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954150619) {}
[INFO ] 2020-01-13T22:22:30,737Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:30,738Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954150619) {}
[INFO ] 2020-01-13T22:22:30,738Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:30,757Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222142.199\nodes\2\cordapps] {}
[INFO ] 2020-01-13T22:22:30,758Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:30,758Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:30,768Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222142.199/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:30,805Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:30,848Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:30,853Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:21:38.219Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:31,466Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,466Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222142.199\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,466Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,489Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,496Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,496Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,638Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,651Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,653Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,656Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,656Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,732Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:31,753Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:31,756Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:31,756Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:31,920Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:31,926Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:31,956Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:31,956Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954151956) {}
[INFO ] 2020-01-13T22:22:31,958Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:31,967Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954151956) {}
[INFO ] 2020-01-13T22:22:31,977Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:31,982Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954151956) {}
[INFO ] 2020-01-13T22:22:31,987Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:32,023Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:32,031Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954151956) {}
[INFO ] 2020-01-13T22:22:32,035Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954147696) {}
[INFO ] 2020-01-13T22:22:32,037Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:32,048Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954151956) {}
[INFO ] 2020-01-13T22:22:32,050Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:32,064Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954150619) {}
[INFO ] 2020-01-13T22:22:32,066Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:32,077Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954151956) {}
[INFO ] 2020-01-13T22:22:32,079Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:32,089Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954151956) {}
[INFO ] 2020-01-13T22:22:32,089Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:32,090Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954151956) {}
[INFO ] 2020-01-13T22:22:32,090Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-01-13T22:22:32,091Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:32,091Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[WARN ] 2020-01-13T22:22:32,098Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:32,098Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[WARN ] 2020-01-13T22:22:32,604Z [Mock network] transactions.TransactionBuilder. - Signature constraints not available on network requiring a minimum platform version of 4. Current is: 1. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
[WARN ] 2020-01-13T22:22:32,604Z [Mock network] transactions.TransactionBuilder. - Reverting back to using hash constraints for contract com.example.contract.IOUContract {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
[ERROR] 2020-01-13T22:22:34,807Z [Mock network] internal.Verifier. - Error validating transaction 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.addMissingDependency(TransactionBuilder.kt:185) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core(TransactionBuilder.kt:165) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransactionWithContext$core$default(TransactionBuilder.kt:133) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toWireTransaction(TransactionBuilder.kt:130) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.toLedgerTransaction(TransactionBuilder.kt:551) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:101) ~[classes/:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:33) ~[classes/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_231]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[ERROR] 2020-01-13T22:22:34,815Z [Mock network] internal.Verifier. - Error validating transaction 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F. [errorCode=9q63wp, moreInformationAt=https://errors.corda.net/OS/4.3/9q63wp] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:101) ~[classes/:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:33) ~[classes/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_231]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
[INFO ] 2020-01-13T22:22:34,815Z [Mock network] corda.flow. - Flow raised an error: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F. Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
[INFO ] 2020-01-13T22:22:34,826Z [Mock network] statemachine.StaffedFlowHospital. - Flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=57da6975-850b-40f5-899e-5a4dc53c31e4, timestamp: 2020-01-13T22:22:32.186Z, entityType: Invocation, sessionId=57da6975-850b-40f5-899e-5a4dc53c31e4, timestamp: 2020-01-13T22:22:32.186Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.CreateFlow$Initiator, classToInitiateWith=class com.example.flow.CreateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=8FF7700BAEB987AD6757DBEDF34728BF5F9E13147FA1F5DDD75F3C4B89A0982D), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=72619D00E3AD5A6783002585066290B862C23E7AD45AB261ECCF3C4C59120AE9), errorState=Clean, numberOfSuspends=0), flowLogic=com.example.flow.CreateFlow$Initiator@563f000f, pendingDeduplicationHandlers=[], isFlowResumed=true, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, senderUUID=810ff681-9f33-49d3-99e0-4f61192423d2) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
[INFO ] 2020-01-13T22:22:34,829Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:101) ~[classes/:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:33) ~[classes/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_231]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[INFO ] 2020-01-13T22:22:34,834Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:101) ~[classes/:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:33) ~[classes/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_231]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-01-13T22:22:34,870Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] errored, dumping all transitions:

 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:32.535Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[fc76cbf1-7955-4443-9e69-27e549c51ff8], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=57da6975-850b-40f5-899e-5a4dc53c31e4, timestamp: 2020-01-13T22:22:32.186Z, entityType: Invocation, sessionId=57da6975-850b-40f5-899e-5a4dc53c31e4, timestamp: 2020-01-13T22:22:32.186Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.CreateFlow$Initiator, classToInitiateWith=class com.example.flow.CreateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=8FF7700BAEB987AD6757DBEDF34728BF5F9E13147FA1F5DDD75F3C4B89A0982D), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=72619D00E3AD5A6783002585066290B862C23E7AD45AB261ECCF3C4C59120AE9), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bf6ae68])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bf6ae68])
    SignalFlowHasStarted(flowId=[fc76cbf1-7955-4443-9e69-27e549c51ff8])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bf6ae68]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:34.837Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4711925637320197431, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:34.847Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:34.856Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
[WARN ] 2020-01-13T22:22:34,870Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] error [errorCode=1r9qcbc, moreInformationAt=https://errors.corda.net/OS/4.3/1r9qcbc] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:101) ~[classes/:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:33) ~[classes/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_231]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-01-13T22:22:34,874Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error [errorCode=1r9qcbc, moreInformationAt=https://errors.corda.net/OS/4.3/1r9qcbc] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:101) ~[classes/:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:33) ~[classes/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_231]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[WARN ] 2020-01-13T22:22:34,929Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] errored, dumping all transitions:

 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:32.535Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[fc76cbf1-7955-4443-9e69-27e549c51ff8], checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=57da6975-850b-40f5-899e-5a4dc53c31e4, timestamp: 2020-01-13T22:22:32.186Z, entityType: Invocation, sessionId=57da6975-850b-40f5-899e-5a4dc53c31e4, timestamp: 2020-01-13T22:22:32.186Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.CreateFlow$Initiator, classToInitiateWith=class com.example.flow.CreateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=8FF7700BAEB987AD6757DBEDF34728BF5F9E13147FA1F5DDD75F3C4B89A0982D), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=72619D00E3AD5A6783002585066290B862C23E7AD45AB261ECCF3C4C59120AE9), errorState=Clean, numberOfSuspends=0), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bf6ae68])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bf6ae68])
    SignalFlowHasStarted(flowId=[fc76cbf1-7955-4443-9e69-27e549c51ff8])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@4bf6ae68]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:34.837Z
  Event: Error(exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=4711925637320197431, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:34.847Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:34.856Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true


 --- Transition of flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] ---
  Timestamp: 2020-01-13T22:22:34.929Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F, errorId=4711925637320197431)], sessions=[], senderUUID=810ff681-9f33-49d3-99e0-4f61192423d2)
    CreateTransaction
    RemoveCheckpoint(id=[fc76cbf1-7955-4443-9e69-27e549c51ff8])
    PersistDeduplicationFacts(deduplicationHandlers=[])
    ReleaseSoftLocks(uuid=fc76cbf1-7955-4443-9e69-27e549c51ff8)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[fc76cbf1-7955-4443-9e69-27e549c51ff8], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=4711925637320197431, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F)]), lastState=StateMachineState(checkpoint=Checkpoint(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=57da6975-850b-40f5-899e-5a4dc53c31e4, timestamp: 2020-01-13T22:22:32.186Z, entityType: Invocation, sessionId=57da6975-850b-40f5-899e-5a4dc53c31e4, timestamp: 2020-01-13T22:22:32.186Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, subFlowStack=[Initiating(flowClass=class com.example.flow.CreateFlow$Initiator, classToInitiateWith=class com.example.flow.CreateFlow$Initiator, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=5, corDappName=cordapp-example-workflows-0.1, corDappHash=8FF7700BAEB987AD6757DBEDF34728BF5F9E13147FA1F5DDD75F3C4B89A0982D), isEnabledTimedFlow=false)], flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=72619D00E3AD5A6783002585066290B862C23E7AD45AB261ECCF3C4C59120AE9), errorState=Errored(errors=[FlowError(errorId=4711925637320197431, exception=net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F)], propagatedIndex=1, propagating=true), numberOfSuspends=0), flowLogic=com.example.flow.CreateFlow$Initiator@563f000f, pendingDeduplicationHandlers=[], isFlowResumed=false, isTransactionTracked=false, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, senderUUID=810ff681-9f33-49d3-99e0-4f61192423d2))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.errorState.propagatedIndex: 
    0
    1
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
[WARN ] 2020-01-13T22:22:34,929Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [fc76cbf1-7955-4443-9e69-27e549c51ff8] error [errorCode=1r9qcbc, moreInformationAt=https://errors.corda.net/OS/4.3/1r9qcbc] {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=fc76cbf1-7955-4443-9e69-27e549c51ff8, invocation_id=57da6975-850b-40f5-899e-5a4dc53c31e4, invocation_timestamp=2020-01-13T22:22:32.186Z, origin=Only For Testing, session_id=57da6975-850b-40f5-899e-5a4dc53c31e4, session_timestamp=2020-01-13T22:22:32.186Z, thread-id=211}
net.corda.core.contracts.TransactionVerificationException$ContractRejection: Contract verification failed: Failed requirement: The IOU's value must be non-negative., contract: com.example.contract.IOUContract, transaction: 54247286412FCE4D5DB4E61325557C04F86CF0E380EB65C92F75828187E0BC9F
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:403) ~[corda-core-4.3.jar:?]
	at net.corda.core.internal.Verifier.verify(TransactionVerifierServiceInternal.kt:72) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.LedgerTransaction.verify(LedgerTransaction.kt:136) ~[corda-core-4.3.jar:?]
	at net.corda.core.transactions.TransactionBuilder.verify(TransactionBuilder.kt:559) ~[corda-core-4.3.jar:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:101) ~[classes/:?]
	at com.example.flow.CreateFlow$Initiator.call(ExampleFlow.java:33) ~[classes/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:270) ~[corda-node-4.3.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:46) ~[corda-node-4.3.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10-jdk8.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_231]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_231]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_231]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_231]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.3.jar:?]
Caused by: java.lang.IllegalArgumentException: Failed requirement: The IOU's value must be non-negative.
	at net.corda.core.contracts.Requirements.using(ContractsDSL.kt:26) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.lambda$verify$0(IOUContract.java:50) ~[classes/:?]
	at net.corda.core.contracts.ContractsDSL.requireThat(ContractsDSL.kt:30) ~[corda-core-4.3.jar:?]
	at com.example.contract.IOUContract.verify(IOUContract.java:37) ~[classes/:?]
	at net.corda.core.internal.Verifier.verifyContracts(TransactionVerifierServiceInternal.kt:400) ~[corda-core-4.3.jar:?]
	... 18 more
[INFO ] 2020-01-13T22:22:35,167Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222235.052\nodes\0\cordapps] {}
[INFO ] 2020-01-13T22:22:35,169Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:35,169Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:35,181Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:35,218Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:35,245Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:35,252Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:35.052Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:35,814Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,817Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222235.052\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,817Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,831Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,834Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,834Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,941Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,951Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,951Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,956Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:35,956Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:36,047Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:36,103Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:36,114Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:36,114Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:36,342Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:36,349Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:36,349Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954156349) {}
[INFO ] 2020-01-13T22:22:36,351Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:36,373Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954156349) {}
[INFO ] 2020-01-13T22:22:36,388Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:36,394Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954156349) {}
[INFO ] 2020-01-13T22:22:36,400Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:36,447Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:36,450Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-13T22:22:36,450Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-13T22:22:36,457Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954156349) {}
[INFO ] 2020-01-13T22:22:36,460Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954156349) {}
[INFO ] 2020-01-13T22:22:36,460Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:36,463Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954156349) {}
[INFO ] 2020-01-13T22:22:36,463Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:36,489Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222235.052\nodes\1\cordapps] {}
[INFO ] 2020-01-13T22:22:36,493Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:36,493Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:36,505Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:36,545Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:36,605Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:36,610Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:35.052Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:37,154Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,156Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222235.052\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,156Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,167Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,177Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,177Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,310Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,320Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,323Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,325Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,325Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,406Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:37,414Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:37,416Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:37,416Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:37,555Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:37,559Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:37,584Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:37,584Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954157584) {}
[INFO ] 2020-01-13T22:22:37,585Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:37,591Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954157584) {}
[INFO ] 2020-01-13T22:22:37,602Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:37,606Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954157584) {}
[INFO ] 2020-01-13T22:22:37,611Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:37,644Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:37,651Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954157584) {}
[INFO ] 2020-01-13T22:22:37,654Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954156349) {}
[INFO ] 2020-01-13T22:22:37,656Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:37,666Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954157584) {}
[INFO ] 2020-01-13T22:22:37,667Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:37,678Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954157584) {}
[INFO ] 2020-01-13T22:22:37,678Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:37,679Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954157584) {}
[INFO ] 2020-01-13T22:22:37,679Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:37,698Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222235.052\nodes\2\cordapps] {}
[INFO ] 2020-01-13T22:22:37,700Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:37,700Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:37,710Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222235.052/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:37,741Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:37,782Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:37,785Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:35.052Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:38,295Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,297Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222235.052\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,297Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,305Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,305Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,305Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,417Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,433Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,433Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,443Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,443Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,517Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:38,524Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:38,525Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:38,525Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:38,667Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:38,668Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:38,703Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:38,703Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954158703) {}
[INFO ] 2020-01-13T22:22:38,706Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:38,711Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954158703) {}
[INFO ] 2020-01-13T22:22:38,722Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:38,727Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954158703) {}
[INFO ] 2020-01-13T22:22:38,733Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:38,768Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:38,778Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954158703) {}
[INFO ] 2020-01-13T22:22:38,781Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954156349) {}
[INFO ] 2020-01-13T22:22:38,783Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:38,792Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954158703) {}
[INFO ] 2020-01-13T22:22:38,794Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:38,801Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954157584) {}
[INFO ] 2020-01-13T22:22:38,805Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:38,812Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954158703) {}
[INFO ] 2020-01-13T22:22:38,815Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:38,821Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954158703) {}
[INFO ] 2020-01-13T22:22:38,821Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:38,824Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954158703) {}
[INFO ] 2020-01-13T22:22:38,824Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-01-13T22:22:38,825Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:38,825Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[WARN ] 2020-01-13T22:22:38,826Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:38,826Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:40,224Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=ea52e09b-7b2a-48f0-a1c4-1f174d39485b, invocation_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, invocation_timestamp=2020-01-13T22:22:40.156Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, session_timestamp=2020-01-13T22:22:40.156Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,292Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=ea52e09b-7b2a-48f0-a1c4-1f174d39485b, invocation_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, invocation_timestamp=2020-01-13T22:22:40.156Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, session_timestamp=2020-01-13T22:22:40.156Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,383Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c932be9c-27ea-428f-be78-6e9479e1feec, invocation_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, invocation_timestamp=2020-01-13T22:22:38.828Z, origin=Only For Testing, session_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, session_timestamp=2020-01-13T22:22:38.828Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,383Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c932be9c-27ea-428f-be78-6e9479e1feec, invocation_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, invocation_timestamp=2020-01-13T22:22:38.828Z, origin=Only For Testing, session_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, session_timestamp=2020-01-13T22:22:38.828Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,486Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c932be9c-27ea-428f-be78-6e9479e1feec, invocation_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, invocation_timestamp=2020-01-13T22:22:38.828Z, origin=Only For Testing, session_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, session_timestamp=2020-01-13T22:22:38.828Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,518Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=ea52e09b-7b2a-48f0-a1c4-1f174d39485b, invocation_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, invocation_timestamp=2020-01-13T22:22:40.156Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, session_timestamp=2020-01-13T22:22:40.156Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,529Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=ea52e09b-7b2a-48f0-a1c4-1f174d39485b, invocation_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, invocation_timestamp=2020-01-13T22:22:40.156Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, session_timestamp=2020-01-13T22:22:40.156Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,537Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=ea52e09b-7b2a-48f0-a1c4-1f174d39485b, invocation_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, invocation_timestamp=2020-01-13T22:22:40.156Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, session_timestamp=2020-01-13T22:22:40.156Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,547Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=ea52e09b-7b2a-48f0-a1c4-1f174d39485b, invocation_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, invocation_timestamp=2020-01-13T22:22:40.156Z, origin=O=Mock Company 1, L=London, C=GB, session_id=28b8cd74-a024-40ff-aa0c-5d30dbbd7863, session_timestamp=2020-01-13T22:22:40.156Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,572Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c932be9c-27ea-428f-be78-6e9479e1feec, invocation_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, invocation_timestamp=2020-01-13T22:22:38.828Z, origin=Only For Testing, session_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, session_timestamp=2020-01-13T22:22:38.828Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,572Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000002, flow-id=c932be9c-27ea-428f-be78-6e9479e1feec, invocation_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, invocation_timestamp=2020-01-13T22:22:38.828Z, origin=Only For Testing, session_id=7ea00851-5d5a-45d5-9345-2b6022af8d92, session_timestamp=2020-01-13T22:22:38.828Z, thread-id=387, tx_id=BA2C09F3AFFB2C0EB6431FECFAE1DBF37FE9DCF41FC0F3C716CC00780A847B5B}
[INFO ] 2020-01-13T22:22:40,704Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222240.597\nodes\0\cordapps] {}
[INFO ] 2020-01-13T22:22:40,706Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:40,706Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:40,715Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:40,757Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:40,770Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:40,773Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:40.597Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:41,304Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,305Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222240.597\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,305Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,322Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,325Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,325Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,434Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,435Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,435Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,444Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,444Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,519Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:41,549Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:41,557Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:41,557Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:41,691Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:41,701Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:41,701Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954161701) {}
[INFO ] 2020-01-13T22:22:41,704Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:41,716Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954161701) {}
[INFO ] 2020-01-13T22:22:41,729Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:41,735Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954161701) {}
[INFO ] 2020-01-13T22:22:41,741Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:41,775Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:41,778Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-13T22:22:41,778Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-13T22:22:41,784Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954161701) {}
[INFO ] 2020-01-13T22:22:41,786Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954161701) {}
[INFO ] 2020-01-13T22:22:41,786Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:41,786Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954161701) {}
[INFO ] 2020-01-13T22:22:41,787Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:41,805Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222240.597\nodes\1\cordapps] {}
[INFO ] 2020-01-13T22:22:41,807Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:41,807Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:41,817Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:41,852Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:41,901Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:41,904Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:40.597Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:42,373Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,374Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222240.597\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,374Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,388Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,388Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,388Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,504Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,512Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,514Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,515Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,515Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,578Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:42,584Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:42,585Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:42,585Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:42,717Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:42,717Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:42,754Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:42,754Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954162754) {}
[INFO ] 2020-01-13T22:22:42,754Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:42,760Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954162754) {}
[INFO ] 2020-01-13T22:22:42,770Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:42,774Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954162754) {}
[INFO ] 2020-01-13T22:22:42,777Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:42,816Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:42,825Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954162754) {}
[INFO ] 2020-01-13T22:22:42,829Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954161701) {}
[INFO ] 2020-01-13T22:22:42,833Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:42,842Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954162754) {}
[INFO ] 2020-01-13T22:22:42,845Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:42,855Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954162754) {}
[INFO ] 2020-01-13T22:22:42,855Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:42,856Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954162754) {}
[INFO ] 2020-01-13T22:22:42,856Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:42,914Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222240.597\nodes\2\cordapps] {}
[INFO ] 2020-01-13T22:22:42,916Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:42,916Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:42,925Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222240.597/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:42,955Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:42,995Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:42,998Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:40.597Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:43,423Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,425Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222240.597\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,425Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,438Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,442Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,442Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,546Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,553Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,554Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,557Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,557Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,627Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:43,636Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:43,638Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:43,638Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:43,782Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:43,783Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:43,813Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:43,813Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954163813) {}
[INFO ] 2020-01-13T22:22:43,815Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:43,822Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954163813) {}
[INFO ] 2020-01-13T22:22:43,832Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:43,837Z [MockNode-9-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954163813) {}
[INFO ] 2020-01-13T22:22:43,840Z [MockNode-9-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:43,875Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:43,882Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954163813) {}
[INFO ] 2020-01-13T22:22:43,884Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954161701) {}
[INFO ] 2020-01-13T22:22:43,887Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:43,894Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954163813) {}
[INFO ] 2020-01-13T22:22:43,897Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:43,905Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954162754) {}
[INFO ] 2020-01-13T22:22:43,907Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:43,914Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954163813) {}
[INFO ] 2020-01-13T22:22:43,916Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:43,924Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954163813) {}
[INFO ] 2020-01-13T22:22:43,924Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:43,925Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954163813) {}
[INFO ] 2020-01-13T22:22:43,925Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-01-13T22:22:43,926Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:43,926Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[WARN ] 2020-01-13T22:22:43,926Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:43,926Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:44,920Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=b65ba7bd-6be4-4f2d-aa60-a99b4d7f78f5, invocation_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, invocation_timestamp=2020-01-13T22:22:44.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, session_timestamp=2020-01-13T22:22:44.903Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:44,930Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=b65ba7bd-6be4-4f2d-aa60-a99b4d7f78f5, invocation_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, invocation_timestamp=2020-01-13T22:22:44.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, session_timestamp=2020-01-13T22:22:44.903Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,062Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=3ab5b560-9ab1-4f8e-8bfd-3f9508898773, invocation_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, invocation_timestamp=2020-01-13T22:22:43.927Z, origin=Only For Testing, session_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, session_timestamp=2020-01-13T22:22:43.927Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,062Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=3ab5b560-9ab1-4f8e-8bfd-3f9508898773, invocation_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, invocation_timestamp=2020-01-13T22:22:43.927Z, origin=Only For Testing, session_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, session_timestamp=2020-01-13T22:22:43.927Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,087Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=3ab5b560-9ab1-4f8e-8bfd-3f9508898773, invocation_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, invocation_timestamp=2020-01-13T22:22:43.927Z, origin=Only For Testing, session_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, session_timestamp=2020-01-13T22:22:43.927Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,098Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000005, flow-id=b65ba7bd-6be4-4f2d-aa60-a99b4d7f78f5, invocation_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, invocation_timestamp=2020-01-13T22:22:44.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, session_timestamp=2020-01-13T22:22:44.903Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,104Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=b65ba7bd-6be4-4f2d-aa60-a99b4d7f78f5, invocation_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, invocation_timestamp=2020-01-13T22:22:44.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, session_timestamp=2020-01-13T22:22:44.903Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,108Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=b65ba7bd-6be4-4f2d-aa60-a99b4d7f78f5, invocation_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, invocation_timestamp=2020-01-13T22:22:44.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, session_timestamp=2020-01-13T22:22:44.903Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,115Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=b65ba7bd-6be4-4f2d-aa60-a99b4d7f78f5, invocation_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, invocation_timestamp=2020-01-13T22:22:44.903Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8ac93593-e75f-470e-bb90-09d2e5b89a8e, session_timestamp=2020-01-13T22:22:44.903Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,124Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=3ab5b560-9ab1-4f8e-8bfd-3f9508898773, invocation_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, invocation_timestamp=2020-01-13T22:22:43.927Z, origin=Only For Testing, session_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, session_timestamp=2020-01-13T22:22:43.927Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,124Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=3ab5b560-9ab1-4f8e-8bfd-3f9508898773, invocation_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, invocation_timestamp=2020-01-13T22:22:43.927Z, origin=Only For Testing, session_id=864c497e-e4da-4bd2-9c04-e28eafbc5958, session_timestamp=2020-01-13T22:22:43.927Z, thread-id=561, tx_id=987C28F8CB2795D2FEF9B26B8A530AFC8D0F4E9189A5C795322F9D270765A066}
[INFO ] 2020-01-13T22:22:45,242Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222245.141\nodes\0\cordapps] {}
[INFO ] 2020-01-13T22:22:45,243Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:45,243Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:45,252Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:45,281Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:45,291Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:45,293Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:45.141Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:45,705Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,706Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222245.141\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,706Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,720Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,722Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,722Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,840Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,849Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,851Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,853Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,853Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,919Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:45,954Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:45,959Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:45,959Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:46,100Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:46,103Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:46,103Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954166103) {}
[INFO ] 2020-01-13T22:22:46,103Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:46,120Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954166103) {}
[INFO ] 2020-01-13T22:22:46,133Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:46,138Z [MockNode-10-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954166103) {}
[INFO ] 2020-01-13T22:22:46,142Z [MockNode-10-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:46,165Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:46,177Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-13T22:22:46,177Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-13T22:22:46,182Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954166103) {}
[INFO ] 2020-01-13T22:22:46,185Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954166103) {}
[INFO ] 2020-01-13T22:22:46,185Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:46,186Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954166103) {}
[INFO ] 2020-01-13T22:22:46,186Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:46,210Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222245.141\nodes\1\cordapps] {}
[INFO ] 2020-01-13T22:22:46,212Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:46,212Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:46,223Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:46,259Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:46,308Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:46,311Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:45.141Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:46,722Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,730Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222245.141\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,730Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,733Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,750Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,750Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,839Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,856Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,856Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,861Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,861Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,935Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:46,940Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:46,941Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:46,941Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:47,067Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:47,067Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:47,088Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:47,088Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954167088) {}
[INFO ] 2020-01-13T22:22:47,099Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:47,105Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954167088) {}
[INFO ] 2020-01-13T22:22:47,112Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:47,118Z [MockNode-11-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954167088) {}
[INFO ] 2020-01-13T22:22:47,121Z [MockNode-11-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:47,155Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:47,163Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954167088) {}
[INFO ] 2020-01-13T22:22:47,165Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954166103) {}
[INFO ] 2020-01-13T22:22:47,166Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:47,174Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954167088) {}
[INFO ] 2020-01-13T22:22:47,174Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:47,182Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954167088) {}
[INFO ] 2020-01-13T22:22:47,182Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:47,183Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954167088) {}
[INFO ] 2020-01-13T22:22:47,183Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:47,208Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222245.141\nodes\2\cordapps] {}
[INFO ] 2020-01-13T22:22:47,210Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:47,210Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:47,222Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222245.141/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:47,260Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:47,306Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:47,311Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:45.141Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:47,691Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,691Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222245.141\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,691Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,706Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,708Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,708Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,822Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,823Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,831Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,834Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,834Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,912Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:47,917Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:47,918Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:47,918Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:48,058Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:48,059Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:48,090Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:48,090Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954168090) {}
[INFO ] 2020-01-13T22:22:48,092Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:48,097Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954168090) {}
[INFO ] 2020-01-13T22:22:48,106Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:48,110Z [MockNode-12-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954168090) {}
[INFO ] 2020-01-13T22:22:48,113Z [MockNode-12-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:48,139Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:48,148Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954168090) {}
[INFO ] 2020-01-13T22:22:48,150Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954166103) {}
[INFO ] 2020-01-13T22:22:48,151Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:48,158Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954168090) {}
[INFO ] 2020-01-13T22:22:48,159Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:48,168Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954167088) {}
[INFO ] 2020-01-13T22:22:48,169Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:48,179Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954168090) {}
[INFO ] 2020-01-13T22:22:48,180Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:48,184Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954168090) {}
[INFO ] 2020-01-13T22:22:48,184Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:48,187Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954168090) {}
[INFO ] 2020-01-13T22:22:48,187Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-01-13T22:22:48,188Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:48,188Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[WARN ] 2020-01-13T22:22:48,188Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:48,188Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:49,086Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=e0e788f7-27e0-47e0-b62b-e2980139a7bf, invocation_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, invocation_timestamp=2020-01-13T22:22:49.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, session_timestamp=2020-01-13T22:22:49.072Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,095Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=e0e788f7-27e0-47e0-b62b-e2980139a7bf, invocation_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, invocation_timestamp=2020-01-13T22:22:49.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, session_timestamp=2020-01-13T22:22:49.072Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,144Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=99acd529-5e42-4c4e-ac61-b37b33a96ea4, invocation_id=751aed31-a546-4aaf-9845-55717f76a605, invocation_timestamp=2020-01-13T22:22:48.190Z, origin=Only For Testing, session_id=751aed31-a546-4aaf-9845-55717f76a605, session_timestamp=2020-01-13T22:22:48.190Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,144Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=99acd529-5e42-4c4e-ac61-b37b33a96ea4, invocation_id=751aed31-a546-4aaf-9845-55717f76a605, invocation_timestamp=2020-01-13T22:22:48.190Z, origin=Only For Testing, session_id=751aed31-a546-4aaf-9845-55717f76a605, session_timestamp=2020-01-13T22:22:48.190Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,159Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=99acd529-5e42-4c4e-ac61-b37b33a96ea4, invocation_id=751aed31-a546-4aaf-9845-55717f76a605, invocation_timestamp=2020-01-13T22:22:48.190Z, origin=Only For Testing, session_id=751aed31-a546-4aaf-9845-55717f76a605, session_timestamp=2020-01-13T22:22:48.190Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,170Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000007, flow-id=e0e788f7-27e0-47e0-b62b-e2980139a7bf, invocation_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, invocation_timestamp=2020-01-13T22:22:49.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, session_timestamp=2020-01-13T22:22:49.072Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,177Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000007, flow-id=e0e788f7-27e0-47e0-b62b-e2980139a7bf, invocation_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, invocation_timestamp=2020-01-13T22:22:49.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, session_timestamp=2020-01-13T22:22:49.072Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,182Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000007, flow-id=e0e788f7-27e0-47e0-b62b-e2980139a7bf, invocation_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, invocation_timestamp=2020-01-13T22:22:49.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, session_timestamp=2020-01-13T22:22:49.072Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,189Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000007, flow-id=e0e788f7-27e0-47e0-b62b-e2980139a7bf, invocation_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, invocation_timestamp=2020-01-13T22:22:49.072Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e910943a-f0cd-4cd5-bca2-59ce0c285604, session_timestamp=2020-01-13T22:22:49.072Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,196Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=99acd529-5e42-4c4e-ac61-b37b33a96ea4, invocation_id=751aed31-a546-4aaf-9845-55717f76a605, invocation_timestamp=2020-01-13T22:22:48.190Z, origin=Only For Testing, session_id=751aed31-a546-4aaf-9845-55717f76a605, session_timestamp=2020-01-13T22:22:48.190Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,196Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000006, flow-id=99acd529-5e42-4c4e-ac61-b37b33a96ea4, invocation_id=751aed31-a546-4aaf-9845-55717f76a605, invocation_timestamp=2020-01-13T22:22:48.190Z, origin=Only For Testing, session_id=751aed31-a546-4aaf-9845-55717f76a605, session_timestamp=2020-01-13T22:22:48.190Z, thread-id=734, tx_id=40B717341F1810F72923DAF93F2CCC3D456F6C6DE7C2656325CE5DCCC4EDF27F}
[INFO ] 2020-01-13T22:22:49,300Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222249.217\nodes\0\cordapps] {}
[INFO ] 2020-01-13T22:22:49,302Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:49,302Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:49,312Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:49,336Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:49,346Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:49,350Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:49.217Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:49,918Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:49,918Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222249.217\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:49,918Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:49,938Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:49,940Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:49,940Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,032Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,038Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,039Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,039Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,039Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,106Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,131Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:50,134Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:50,134Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:50,270Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:50,277Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:50,277Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954170277) {}
[INFO ] 2020-01-13T22:22:50,278Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:50,286Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954170277) {}
[INFO ] 2020-01-13T22:22:50,304Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:50,309Z [MockNode-13-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954170277) {}
[INFO ] 2020-01-13T22:22:50,314Z [MockNode-13-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:50,344Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:50,347Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-13T22:22:50,347Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-13T22:22:50,351Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954170277) {}
[INFO ] 2020-01-13T22:22:50,353Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954170277) {}
[INFO ] 2020-01-13T22:22:50,353Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:50,353Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954170277) {}
[INFO ] 2020-01-13T22:22:50,353Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:50,369Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222249.217\nodes\1\cordapps] {}
[INFO ] 2020-01-13T22:22:50,371Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:50,371Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:50,381Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:50,407Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:50,444Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:50,446Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:49.217Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:50,864Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,864Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222249.217\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,864Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,877Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,879Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,879Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,978Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,986Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,987Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,989Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:50,989Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,054Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,060Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:51,060Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:51,060Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:51,201Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:51,202Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:51,228Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:51,228Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954171228) {}
[INFO ] 2020-01-13T22:22:51,231Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:51,236Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954171228) {}
[INFO ] 2020-01-13T22:22:51,244Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:51,248Z [MockNode-14-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954171228) {}
[INFO ] 2020-01-13T22:22:51,253Z [MockNode-14-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:51,286Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:51,291Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954171228) {}
[INFO ] 2020-01-13T22:22:51,292Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954170277) {}
[INFO ] 2020-01-13T22:22:51,294Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:51,301Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954171228) {}
[INFO ] 2020-01-13T22:22:51,303Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:51,309Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954171228) {}
[INFO ] 2020-01-13T22:22:51,309Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:51,310Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954171228) {}
[INFO ] 2020-01-13T22:22:51,310Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:51,330Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222249.217\nodes\2\cordapps] {}
[INFO ] 2020-01-13T22:22:51,331Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:51,331Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:51,341Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222249.217/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:51,370Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:51,406Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:51,408Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:49.217Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:51,782Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,782Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222249.217\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,782Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,800Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,804Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,804Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,884Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,890Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,892Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,894Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,894Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,956Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:51,967Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:51,967Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:51,967Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:52,084Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:52,084Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:52,111Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:52,111Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954172111) {}
[INFO ] 2020-01-13T22:22:52,113Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:52,118Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954172111) {}
[INFO ] 2020-01-13T22:22:52,127Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:52,132Z [MockNode-15-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954172111) {}
[INFO ] 2020-01-13T22:22:52,136Z [MockNode-15-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:52,167Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:52,173Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954172111) {}
[INFO ] 2020-01-13T22:22:52,175Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954170277) {}
[INFO ] 2020-01-13T22:22:52,176Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:52,184Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954172111) {}
[INFO ] 2020-01-13T22:22:52,184Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:52,192Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954171228) {}
[INFO ] 2020-01-13T22:22:52,194Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:52,201Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954172111) {}
[INFO ] 2020-01-13T22:22:52,202Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:52,210Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954172111) {}
[INFO ] 2020-01-13T22:22:52,210Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:52,211Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954172111) {}
[INFO ] 2020-01-13T22:22:52,211Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-01-13T22:22:52,211Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:52,211Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[WARN ] 2020-01-13T22:22:52,211Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:52,211Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:53,141Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=31f86fc1-8aea-4018-bacb-c97f174f118a, invocation_id=b55a1071-4964-4193-82a4-f9aa7be217d3, invocation_timestamp=2020-01-13T22:22:53.129Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b55a1071-4964-4193-82a4-f9aa7be217d3, session_timestamp=2020-01-13T22:22:53.129Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,149Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=31f86fc1-8aea-4018-bacb-c97f174f118a, invocation_id=b55a1071-4964-4193-82a4-f9aa7be217d3, invocation_timestamp=2020-01-13T22:22:53.129Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b55a1071-4964-4193-82a4-f9aa7be217d3, session_timestamp=2020-01-13T22:22:53.129Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,215Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=db448893-a500-45e9-bb62-53b686bb3cdd, invocation_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, invocation_timestamp=2020-01-13T22:22:52.214Z, origin=Only For Testing, session_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, session_timestamp=2020-01-13T22:22:52.214Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,215Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=db448893-a500-45e9-bb62-53b686bb3cdd, invocation_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, invocation_timestamp=2020-01-13T22:22:52.214Z, origin=Only For Testing, session_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, session_timestamp=2020-01-13T22:22:52.214Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,234Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=db448893-a500-45e9-bb62-53b686bb3cdd, invocation_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, invocation_timestamp=2020-01-13T22:22:52.214Z, origin=Only For Testing, session_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, session_timestamp=2020-01-13T22:22:52.214Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,246Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000009, flow-id=31f86fc1-8aea-4018-bacb-c97f174f118a, invocation_id=b55a1071-4964-4193-82a4-f9aa7be217d3, invocation_timestamp=2020-01-13T22:22:53.129Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b55a1071-4964-4193-82a4-f9aa7be217d3, session_timestamp=2020-01-13T22:22:53.129Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,253Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=31f86fc1-8aea-4018-bacb-c97f174f118a, invocation_id=b55a1071-4964-4193-82a4-f9aa7be217d3, invocation_timestamp=2020-01-13T22:22:53.129Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b55a1071-4964-4193-82a4-f9aa7be217d3, session_timestamp=2020-01-13T22:22:53.129Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,254Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=31f86fc1-8aea-4018-bacb-c97f174f118a, invocation_id=b55a1071-4964-4193-82a4-f9aa7be217d3, invocation_timestamp=2020-01-13T22:22:53.129Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b55a1071-4964-4193-82a4-f9aa7be217d3, session_timestamp=2020-01-13T22:22:53.129Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,265Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=31f86fc1-8aea-4018-bacb-c97f174f118a, invocation_id=b55a1071-4964-4193-82a4-f9aa7be217d3, invocation_timestamp=2020-01-13T22:22:53.129Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b55a1071-4964-4193-82a4-f9aa7be217d3, session_timestamp=2020-01-13T22:22:53.129Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,275Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=db448893-a500-45e9-bb62-53b686bb3cdd, invocation_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, invocation_timestamp=2020-01-13T22:22:52.214Z, origin=Only For Testing, session_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, session_timestamp=2020-01-13T22:22:52.214Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,275Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000008, flow-id=db448893-a500-45e9-bb62-53b686bb3cdd, invocation_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, invocation_timestamp=2020-01-13T22:22:52.214Z, origin=Only For Testing, session_id=544c5386-9a1f-4f3c-aab4-41f51ddb525a, session_timestamp=2020-01-13T22:22:52.214Z, thread-id=907, tx_id=036B2449289A0D553A5F40E90B9F207E3DFA366D5A6D811990916DD0E545D810}
[INFO ] 2020-01-13T22:22:53,483Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222253.403\nodes\0\cordapps] {}
[INFO ] 2020-01-13T22:22:53,485Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/0/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/0/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:53,485Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/0/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:53,493Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/0/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:53,520Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:53,529Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:53,534Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:53.403Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:53,937Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:53,937Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222253.403\nodes\0\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:53,937Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:53,946Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:53,946Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:53,946Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,059Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,067Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,070Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,072Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,072Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,124Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,150Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:54,150Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:54,150Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:54,271Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1), NodeNotarySchemaV1(name=net.corda.node.services.transactions.NodeNotarySchema, version=1)] {}
[INFO ] 2020-01-13T22:22:54,271Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:54,271Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954174271) {}
[INFO ] 2020-01-13T22:22:54,279Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:54,290Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954174271) {}
[INFO ] 2020-01-13T22:22:54,301Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:54,306Z [MockNode-16-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954174271) {}
[INFO ] 2020-01-13T22:22:54,310Z [MockNode-16-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:54,335Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:54,336Z [main] utilities.NotaryLoader. - Starting notary service: class net.corda.node.services.transactions.SimpleNotaryService {}
[INFO ] 2020-01-13T22:22:54,336Z [main] notary.SinglePartyNotaryService. - Starting notary in validating mode {}
[INFO ] 2020-01-13T22:22:54,340Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954174271) {}
[INFO ] 2020-01-13T22:22:54,342Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954174271) {}
[INFO ] 2020-01-13T22:22:54,342Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:54,342Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954174271) {}
[INFO ] 2020-01-13T22:22:54,343Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:54,363Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222253.403\nodes\1\cordapps] {}
[INFO ] 2020-01-13T22:22:54,364Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/1/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/1/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:54,364Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/1/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:54,372Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/1/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:54,424Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:54,507Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:54,512Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:53.403Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:54,948Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,952Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222253.403\nodes\1\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,952Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,964Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,966Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:54,966Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,049Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,054Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,056Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,059Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,059Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,121Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,133Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:55,134Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:55,134Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:55,250Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:55,251Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:55,268Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:55,268Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954175268) {}
[INFO ] 2020-01-13T22:22:55,276Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:55,282Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954175268) {}
[INFO ] 2020-01-13T22:22:55,290Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:55,294Z [MockNode-17-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954175268) {}
[INFO ] 2020-01-13T22:22:55,299Z [MockNode-17-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:55,320Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:55,335Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954175268) {}
[INFO ] 2020-01-13T22:22:55,337Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954174271) {}
[INFO ] 2020-01-13T22:22:55,338Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:55,343Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954175268) {}
[INFO ] 2020-01-13T22:22:55,345Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:55,351Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954175268) {}
[INFO ] 2020-01-13T22:22:55,351Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:55,352Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954175268) {}
[INFO ] 2020-01-13T22:22:55,352Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:55,369Z [main] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build\mock-network\20200113-222253.403\nodes\2\cordapps] {}
[INFO ] 2020-01-13T22:22:55,370Z [main] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/2/cordapps/cordapp-example-contracts-0.1.jar, rootPackageName=null), RestrictedURL(url=file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/2/cordapps/cordapp-example-workflows-0.1.jar, rootPackageName=null) {}
[INFO ] 2020-01-13T22:22:55,370Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/2/cordapps/cordapp-example-contracts-0.1.jar {}
[INFO ] 2020-01-13T22:22:55,379Z [main] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/C:/Users/Mr.%20Simple/samples/cordapp-example/workflows-java/build/mock-network/20200113-222253.403/nodes/2/cordapps/cordapp-example-workflows-0.1.jar {}
[INFO ] 2020-01-13T22:22:55,404Z [main] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2020-01-13T22:22:55,530Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:55,533Z [main] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=1
      notaries=[NotaryInfo(identity=O=Notary Service, L=Zurich, C=CH, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2020-01-13T22:22:53.403Z
      epoch=1
  } {}
[INFO ] 2020-01-13T22:22:55,913Z [main] persistence.AttachmentVersionNumberMigration. - Start executing... {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,915Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs using network parameters from build\mock-network\20200113-222253.403\nodes\2\network-parameters, whitelistedContractImplementations: {}. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,915Z [main] persistence.AttachmentVersionNumberMigration. - Attachment version creation from whitelisted JARs skipped, no attachments not found. {changeSet=migration/node-services.changelog-init.xml::update-version-of-whitelisted-jars::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,919Z [main] migration.VaultStateMigration. - Migrating vault state data to V4 tables {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,929Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:55,929Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:56,003Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [VaultMigrationSchemaV1(name=net.corda.node.migration.VaultMigrationSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1)] {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:56,013Z [main] migration.VaultStateMigration. - Finished performing vault state data migration for 0 states {changeSet=migration/vault-schema.changelog-v9.xml::update-vault-states::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:56,016Z [main] migration.PersistentIdentityMigrationNewTable. - Migrating persistent identities with certificates table into persistent table with no certificate data. {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:56,018Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:56,018Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:56,068Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [MappedSchema(name=net.corda.node.migration.PersistentIdentitiesMigrationSchema, version=1)] {changeSet=migration/node-services.changelog-init.xml::transfer-to-new-persistence-table::R3.Corda, databaseChangeLog=master.changelog.json}
[INFO ] 2020-01-13T22:22:56,077Z [main] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2020-01-13T22:22:56,080Z [main] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:56,080Z [main] persistence.HibernateConfiguration. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:56,200Z [main] persistence.HibernateConfiguration. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), IOUSchemaV1(name=com.example.schema.IOUSchema, version=1)] {}
[INFO ] 2020-01-13T22:22:56,201Z [main] internal.InternalMockNetwork$MockNode. - identity-private-key not found in key store, generating fresh key! {}
[INFO ] 2020-01-13T22:22:56,225Z [main] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2020-01-13T22:22:56,225Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954176225) {}
[INFO ] 2020-01-13T22:22:56,226Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:56,230Z [main] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954176225) {}
[INFO ] 2020-01-13T22:22:56,238Z [main] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2020-01-13T22:22:56,242Z [MockNode-18-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954176225) {}
[INFO ] 2020-01-13T22:22:56,246Z [MockNode-18-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:56,273Z [main] persistence.NodeAttachmentService. - Stored new attachment: id=C9382610B0B8467F879F63AA9E2CC418B3E5D149B84F4DDDDBA3A6E71AE3E61D uploader=app filename=CorDapp Example {}
[INFO ] 2020-01-13T22:22:56,282Z [main] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954176225) {}
[INFO ] 2020-01-13T22:22:56,283Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary Service, L=Zurich, C=CH], platformVersion=5, serial=1578954174271) {}
[INFO ] 2020-01-13T22:22:56,284Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Notary Service, L=Zurich, C=CH {}
[INFO ] 2020-01-13T22:22:56,289Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954176225) {}
[INFO ] 2020-01-13T22:22:56,290Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:56,296Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=5, serial=1578954175268) {}
[INFO ] 2020-01-13T22:22:56,297Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:56,303Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954176225) {}
[INFO ] 2020-01-13T22:22:56,304Z [main] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2020-01-13T22:22:56,309Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954176225) {}
[INFO ] 2020-01-13T22:22:56,309Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2020-01-13T22:22:56,310Z [main] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=5, serial=1578954176225) {}
[INFO ] 2020-01-13T22:22:56,310Z [main] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2020-01-13T22:22:56,310Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:56,310Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[WARN ] 2020-01-13T22:22:56,310Z [main] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class com.example.flow.CreateFlow$Initiator, currently using: class com.example.flow.CreateFlow$Acceptor {}
[INFO ] 2020-01-13T22:22:56,310Z [main] internal.NodeFlowManager. - Registered com.example.flow.CreateFlow$Initiator to initiate com.example.flow.CreateFlow$Acceptor (version 1) {}
[INFO ] 2020-01-13T22:22:57,246Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=60b839c5-d1be-4655-a8e0-77ad6d9cd2f1, invocation_id=76acd558-6341-4922-b301-c58be2456344, invocation_timestamp=2020-01-13T22:22:57.235Z, origin=O=Mock Company 1, L=London, C=GB, session_id=76acd558-6341-4922-b301-c58be2456344, session_timestamp=2020-01-13T22:22:57.235Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,254Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=60b839c5-d1be-4655-a8e0-77ad6d9cd2f1, invocation_id=76acd558-6341-4922-b301-c58be2456344, invocation_timestamp=2020-01-13T22:22:57.235Z, origin=O=Mock Company 1, L=London, C=GB, session_id=76acd558-6341-4922-b301-c58be2456344, session_timestamp=2020-01-13T22:22:57.235Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,296Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=ba0aeef4-b5f1-4135-868c-c379d384011c, invocation_id=7a500945-7b16-4777-8365-2544134afd15, invocation_timestamp=2020-01-13T22:22:56.312Z, origin=Only For Testing, session_id=7a500945-7b16-4777-8365-2544134afd15, session_timestamp=2020-01-13T22:22:56.312Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,296Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=ba0aeef4-b5f1-4135-868c-c379d384011c, invocation_id=7a500945-7b16-4777-8365-2544134afd15, invocation_timestamp=2020-01-13T22:22:56.312Z, origin=Only For Testing, session_id=7a500945-7b16-4777-8365-2544134afd15, session_timestamp=2020-01-13T22:22:56.312Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,319Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=ba0aeef4-b5f1-4135-868c-c379d384011c, invocation_id=7a500945-7b16-4777-8365-2544134afd15, invocation_timestamp=2020-01-13T22:22:56.312Z, origin=Only For Testing, session_id=7a500945-7b16-4777-8365-2544134afd15, session_timestamp=2020-01-13T22:22:56.312Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,327Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000011, flow-id=60b839c5-d1be-4655-a8e0-77ad6d9cd2f1, invocation_id=76acd558-6341-4922-b301-c58be2456344, invocation_timestamp=2020-01-13T22:22:57.235Z, origin=O=Mock Company 1, L=London, C=GB, session_id=76acd558-6341-4922-b301-c58be2456344, session_timestamp=2020-01-13T22:22:57.235Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,332Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000011, flow-id=60b839c5-d1be-4655-a8e0-77ad6d9cd2f1, invocation_id=76acd558-6341-4922-b301-c58be2456344, invocation_timestamp=2020-01-13T22:22:57.235Z, origin=O=Mock Company 1, L=London, C=GB, session_id=76acd558-6341-4922-b301-c58be2456344, session_timestamp=2020-01-13T22:22:57.235Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,336Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000011, flow-id=60b839c5-d1be-4655-a8e0-77ad6d9cd2f1, invocation_id=76acd558-6341-4922-b301-c58be2456344, invocation_timestamp=2020-01-13T22:22:57.235Z, origin=O=Mock Company 1, L=London, C=GB, session_id=76acd558-6341-4922-b301-c58be2456344, session_timestamp=2020-01-13T22:22:57.235Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,342Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000011, flow-id=60b839c5-d1be-4655-a8e0-77ad6d9cd2f1, invocation_id=76acd558-6341-4922-b301-c58be2456344, invocation_timestamp=2020-01-13T22:22:57.235Z, origin=O=Mock Company 1, L=London, C=GB, session_id=76acd558-6341-4922-b301-c58be2456344, session_timestamp=2020-01-13T22:22:57.235Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,350Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=ba0aeef4-b5f1-4135-868c-c379d384011c, invocation_id=7a500945-7b16-4777-8365-2544134afd15, invocation_timestamp=2020-01-13T22:22:56.312Z, origin=Only For Testing, session_id=7a500945-7b16-4777-8365-2544134afd15, session_timestamp=2020-01-13T22:22:56.312Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
[INFO ] 2020-01-13T22:22:57,350Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000010, flow-id=ba0aeef4-b5f1-4135-868c-c379d384011c, invocation_id=7a500945-7b16-4777-8365-2544134afd15, invocation_timestamp=2020-01-13T22:22:56.312Z, origin=Only For Testing, session_id=7a500945-7b16-4777-8365-2544134afd15, session_timestamp=2020-01-13T22:22:56.312Z, thread-id=1080, tx_id=048345CA9CFB3E0F15CFB8EA4FF56414C1A2A29A59E889009B7B9A505109E4BC}
